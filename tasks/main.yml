---
- name: Set configuration directories
  tags:
    - certbot
  set_fact:
    certbot_config_directories:
      - "{{ certbot_root_dir }}"
      - "{{ certbot_root_dir }}/mount"
      - "{{ certbot_root_dir }}/mount/config"
      - "{{ certbot_root_dir }}/mount/logs"
      - "{{ certbot_root_dir }}/mount/work"
      - "{{ certbot_root_dir }}/scripts"

- name: Set container volumes
  tags:
    - certbot
  set_fact:
    certbot_container_volumes:
      - "{{ certbot_root_dir }}/mount/:/certbot/:rw"

- name: Set additional container volumes
  tags:
    - certbot
  set_fact:
    certbot_all_volumes: "{{ certbot_container_volumes + certbot_additional_volumes }}"

- name: Ensure certbot group(s)
  become: yes
  tags:
    - certbot
  loop: "{{ [certbot_user, certbot_group]|unique }}"
  group:
    name: "{{ item }}"

- name: Ensure certbot user
  become: yes
  tags:
    - certbot
  user:
    name:  "{{ certbot_user }}"
    group: "{{ certbot_user }}"
    append: yes
    groups:
      - "{{ certbot_group }}"
      - docker

- name: Ensure group membership(s)
  become: yes
  tags:
    - certbot
  loop: "{{ certbot_group_members }}"
  user:
    name: "{{ item }}"
    append: yes
    groups:
      - "{{ certbot_group }}"

- name: Ensure certbot configuration directories
  become: yes
  loop: "{{ certbot_config_directories }}"
  tags:
    - certbot
  file:
    path: "{{ item }}"
    owner: "{{ certbot_user }}"
    group: "{{ certbot_group }}"
    mode: "2750"
    state: directory

- name: Template certbot scripts
  become: yes
  tags:
    - certbot
  template:
    src: scripts/start_certbot.sh.j2
    dest: "{{ certbot_root_dir }}/scripts/start_certbot.sh"
    owner: "{{ certbot_user }}"
    group: "{{ certbot_group }}"
    mode: "750"

- name: Template certbot service files
  notify: Reload certbot service
  become: yes
  loop:
    - service
    - timer
  tags:
    - certbot
  template:
    src: "certbot.{{ item }}.j2"
    dest: /etc/systemd/system/certbot.{{ certbot_cert_name }}.{{ item }}

- name: Request certificate
  when: certbot_request_cert|bool
  register: certbot_container
  become: yes
  tags:
    - certbot
  docker_container:
    name: certbot
    image: "{{ certbot_container_image }}"
    pull: yes
    detach: no
    cleanup: yes
    volumes: "{{ certbot_all_volumes }}"
    command: |
      certonly --standalone --dns-route53 -d {{ certbot_cert_domain }} --cert-name {{ certbot_cert_name }}
        --config-dir /certbot/config --work-dir /certbot/work --logs-dir /certbot/logs
        --agree-tos -m {{ certbot_email }} --non-interactive
        {{ certbot_request_additional_parameters }}

- name: Output request result
  when: certbot_container is defined and certbot_container.skipped is not defined
  tags:
    - certbot
  debug:
    msg: "{{ certbot_container }}"

- meta: flush_handlers
